apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
mainClassName = "agentpathing.RefinedGrid"
applicationDefaultJvmArgs = ["-Djava.library.path=$buildDir/natives"]

defaultTasks 'run'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.stehno:gradle-natives:0.2.1'
      
    }
}

apply plugin:'com.stehno.natives'

repositories {
	mavenCentral()
}


//task copierTest(type: Copy) {
	//from zipTree(file(gradle.gradleUserHomeDir.getPath()+'/caches/modules-2/files-2.1/org.lwjgl.lwjgl/lwjgl-platform/2.9.3/fbc2afb3e288578e9942578decb6291a490549a0/lwjgl-platform-2.9.3-natives-windows.jar'))//, include: '**/lwjgl-platform/2.9.3/**/lwjgl-platform-2.9.3-natives-windows.jar')
	//from zipTree((gradle.gradleUserHomeDir.getPath()+'/caches/modules-2/files-2.1/org.lwjgl.lwjgl/lwjgl-platform/2.9.3/**/*.jar'))
//	println configurations.compile.getName()
	//from zipTree(configurations.compile.files({'lwjgl-platform-2.9.3-natives-windows.jar'}))
	//println(configurations.compile.getFiles())
//	configurations.compile.each { File file -> println file.name }
//	from 'build/tmp'
	//from 'build/tmp/expandedArchives'
//	into 'build/natives'
//}

dependencies {
	compile group: 'org.slick2d', name: 'slick2d-core', version: '1.0.1'
	compile group: 'org.lwjgl.lwjgl', name: 'lwjgl', version: '2.9.+'
	runtime files("$buildDir/natives") {
		builtBy 'extractNatives'
	}
}



natives {
	jars = [ 'lwjgl-platform-2.9.3-natives-windows', 
        'lwjgl-platform-2.9.3-natives-osx', 
        'lwjgl-platform-2.9.3-natives-linux',
        'jinput-platform-2.0.5-natives-windows.jar',
        'jinput-platform-2.0.5-natives-linux.jar',
        'jinput-platform-2.0.5-natives-osx.jar' ]
	platforms = 'windows'
}

task prepNativesFolder << {
	File natvs = new File("$buildDir/natives")
	if (! natvs.exists()) {
		println "Creating native library location."
		natvs.mkdirs()
		if (natvs.exists()) {
			println "Creation success."
		}
	}
}
//, includes: ['**/lwjgl-platform/**/lwjgl-platform-2.9.3-natives-windows', 
//        '**/lwjgl-platform/**/lwjgl-platform-2.9.3-natives-osx', 
//        '**/lwjgl-platform/**/lwjgl-platform-2.9.3-natives-linux']
task extractNatives(type: Copy) << {
//copy{
	File nat = new File("$buildDir/natives")
	if (! nat.exists()) {
		println "Creating native library location."
		nat.mkdirs()
		if (nat.exists()) {
			println "Creation success."
		}
	}

	FileTree winFT = fileTree(dir: gradle.gradleUserHomeDir.getPath(), include: '**/lwjgl-platform/2.9.3/**/lwjgl-platform-2.9.3-natives-windows.jar')
	FileTree winJI = fileTree(dir: gradle.gradleUserHomeDir.getPath(), include: '**/jinput-platform/2.0.5/**/jinput-platform-2.0.5-natives-windows.jar')
	FileTree osxFT = fileTree(dir: gradle.gradleUserHomeDir.getPath(), include: '**/lwjgl-platform/2.9.3/**/lwjgl-platform-2.9.3-natives-osx.jar')
	FileTree osxJI = fileTree(dir: gradle.gradleUserHomeDir.getPath(), include: '**/jinput-platform/2.0.5/**/jinput-platform-2.0.5-natives-osx.jar')
	FileTree linFT = fileTree(dir: gradle.gradleUserHomeDir.getPath(), include: '**/lwjgl-platform/2.9.3/**/lwjgl-platform-2.9.3-natives-linux.jar')
	FileTree linJI = fileTree(dir: gradle.gradleUserHomeDir.getPath(), include: '**/jinput-platform/2.0.5/**/jinput-platform-2.0.5-natives-linux.jar')
	
	FileTree natvs = zipTree(winFT.getSingleFile())
	natvs = natvs + zipTree(osxFT.getSingleFile())
	natvs = natvs + zipTree(linFT.getSingleFile())
	natvs = natvs + zipTree(winJI.getSingleFile())
	natvs = natvs + zipTree(osxJI.getSingleFile())
	natvs = natvs + zipTree(linJI.getSingleFile())
	
	from natvs
	include '*.dll'
	include '*.so'
	include '*.dylib'
	into 'build/natives'
//}
}

